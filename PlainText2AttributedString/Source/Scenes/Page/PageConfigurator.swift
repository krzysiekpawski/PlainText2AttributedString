//
//  PageConfigurator.swift
//  PlainText2AttributedString
//
//  Created by Krzysztof Pawski on 15/02/16.
//  Copyright (c) 2016 Krzysztof Pawski. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

extension PageViewController: PagePresenterOutput {
  override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
    router.passDataToNextScene(segue)
  }
}

extension PageInteractor: PageViewControllerOutput {
}

extension PagePresenter: PageInteractorOutput {
}

final class PageConfigurator {
  // MARK: Object lifecycle
  
  class var sharedInstance: PageConfigurator {
    struct Static {
      static var instance: PageConfigurator?
      static var token: dispatch_once_t = 0
    }
    
    dispatch_once(&Static.token) {
      Static.instance = PageConfigurator()
    }
    
    return Static.instance!
  }
  
  // MARK: Configuration
  
  func configure(viewController: PageViewController)
  {
    let router = PageRouter()
    router.viewController = viewController
    
    let presenter = PagePresenter()
    presenter.output = viewController
    
    let pagesWorker = PagesWorker(pagesStore: PagesMemStore())
    let chaptersWorker = ChaptersWorker(chaptersStore: ChaptersMemStore())
    let interactor = PageInteractor(pagesWorker: pagesWorker, chaptersWorker: chaptersWorker)
    interactor.output = presenter
    
    viewController.output = interactor
    viewController.router = router
  }
}
