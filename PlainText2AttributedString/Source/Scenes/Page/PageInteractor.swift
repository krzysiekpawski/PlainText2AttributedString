//
//  PageInteractor.swift
//  PlainText2AttributedString
//
//  Created by Krzysztof Pawski on 15/02/16.
//  Copyright (c) 2016 Krzysztof Pawski. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol PageInteractorInput {
  func fetchPages(request: PageScene.FetchPages.Request)
  func chapterTitle() -> String
  
  var tintColor: UIColor! { get set }
  var pageIndexToBeSelected: UInt! { get set }
  var chapterId: UInt! { get set }
}

protocol PageInteractorOutput {
  func presentFetchedPages(response: PageScene.FetchPages.Response)
}

final class PageInteractor: PageInteractorInput {
  var output: PageInteractorOutput!
  var worker: PagesWorker
  var chaptersWorker: ChaptersWorker
  
  var tintColor: UIColor!
  var pageIndexToBeSelected: UInt!
  var chapterId: UInt!
  
  init(pagesWorker: PagesWorker, chaptersWorker: ChaptersWorker) {
    self.worker = pagesWorker
    self.chaptersWorker = chaptersWorker
  }
  
  // MARK: Business logic
  
  func fetchPages(request: PageScene.FetchPages.Request) {
    worker.fetchPages(chapterId, completionHandler: { (pages) -> Void in
      let response = PageScene.FetchPages.Response(pages: pages)
      self.output.presentFetchedPages(response)
    })
  }
  
  func chapterTitle() -> String {
    return chaptersWorker.chapterTitle(chapterId: chapterId)
  }
  
  // MARK: Private functions
  
  private var pagesIndexes = Dictionary<UInt, UInt>()
  private func fetchPageIndex(pageIdOpt: UInt?) -> UInt? {
    guard let pageId = pageIdOpt else {
      return nil
    }
    
    if let pageIndex = pagesIndexes[pageId] {
      return pageIndex
    }
    
    guard let pageIndex = worker.pageIndex(pageId) else {
      return nil
    }
    pagesIndexes[pageId] = pageIndex
    return pageIndex
  }
}
